" Right wrapping behavior for text like files
au BufRead,BufNewFile *.txt,*.tex,*.md set wrap linebreak nolist textwidth=0 wrapmargin=0

" Enable spell checker for text like files
au BufRead *.txt,*.tex,*.md setlocal spell

" GOLANG
"
" autorun goimports when saving
let g:go_fmt_command = "goimports"


" Vertical line at 80 char to follow PEP
if exists('+colorcolumn')
  set colorcolumn=80
else
  au BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%>80v.\+', -1)
endif

" LaTex
" let g:vimtex_view_general_viewer= '/Applications/Skim.app/Contents/SharedSupport/displayline'
" let g:vimtex_view_general_options = '@line @pdf @tex'
let g:vimtex_view_general_viewer = '/Applications/Skim.app/Contents/SharedSupport/displayline'
let g:vimtex_view_general_options = '-r @line @pdf @tex'
let g:vimtex_view_general_options_latexmk = '-r 1'

let g:vimtex_quickfix_ignored_warnings = [
\ 'Underfull',
\ 'Overfull',
\ ]

" enable neocomplete for latex
if !exists('g:neocomplete#sources#omni#input_patterns')
let g:neocomplete#sources#omni#input_patterns = {}
endif
let g:neocomplete#sources#omni#input_patterns.tex =
	\ '\v\\%('
	\ . '\a*%(ref|cite)\a*%(\s*\[[^]]*\])?\s*\{[^{}]*'
	\ . '|includegraphics%(\s*\[[^]]*\])?\s*\{[^{}]*'
	\ . '|%(include|input)\s*\{[^{}]*'
	\ . ')'

" Latex spell checking
" disable in comments
let g:tex_comment_nospell=1

" Only latex, no plain tex for new files
let g:tex_flavor='latex'

"don't conceal math environments etc
let g:tex_conceal = ""

" move faster between vim splits
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>


" toggle paste on/off
set pastetoggle=<F2> " pastetoggle (sane indentation on pastes)

"let g:syntastic_enable_signs = 0
"let g:syntastic_enable_balloons = 0
let g:syntastic_enable_highlighting = 0
"let g:pymode_syntax = 0
"let g:pymode_syntax_slow_sync = 1
"let g:pymode_rope_lookup_project = 0
"let g:pymode_rope_completion = 0
"let g:pymode_rope_complete_on_dot = 0
"let g:pymode_rope_autoimport = 0
"let g:pymode_folding = 0
let g:pymode_folding_nest_limit = 100 " this kills performance!


"let g:syntastic_python_checkers = ['flake8']
"let g:syntastic_python_flake8_args='--ignore=E501,E225'
"set statusline+=%#warningmsg#
"set statusline+=%{SyntasticStatuslineFlag()}
"set statusline+=%*

"let g:syntastic_warning_symbol = 'WW'
"let g:syntastic_error_symbol = 'EE'
"let g:syntastic_style_error_symbol = 'SE'
"let g:syntastic_style_warning_symbol = 'SW'

"highlight SyntasticErrorLine guibg=#550000
"highlight SyntasticWarningLine guibg=#331d1e


let g:syntastic_quiet_messages = { "type": "style" }

"let g:syntastic_always_populate_loc_list = 1
"let g:syntastic_auto_loc_list = 1
"let g:syntastic_check_on_open = 1
"let g:syntastic_check_on_wq = 1
" let g:syntastic_python_flake8_args="--ignore=E501,W601"

